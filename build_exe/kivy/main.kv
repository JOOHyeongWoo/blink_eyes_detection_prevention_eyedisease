#  -*- coding: utf-8 -*-


WindowManager:
    
    size: (700, 500)
    Setting_window:
        name: 'setting'
        BoxLayout:
            
            orientation: 'vertical'
            Upper_bar:
                font_name:'build_exe/kivy/NanumGothic.ttf'
                size_hint: (1, 0.8)
                canvas.before:
                    Color:
                        rgba: 0, 0, 0, 1

                    Rectangle:
                        pos: self.pos
                        size: self.size

            Check_minute:
                size_hint: (1, 0.5)
                canvas.before:
                    Color:
                        rgba:  0.5, 0.5, 0.5, 1

                    Rectangle:
                        pos: self.pos
                        size: self.size


            Button_bar:
                canvas.before:
                    Color:
                        rgba: 0, 0, 0, 1

                    Rectangle:
                        pos: self.pos
                        size: self.size

    Running_window:
        name: 'running'
        id: runningwindow



<Setting_window>:
    
    



<Upper_bar>:
    padding: [30, 30]
    orientation: 'vertical'
    BoxLayout:
        padding: [30, 0]
        orientation: 'horizontal'
        Label:
            size_hint: (0.3, 1)
            pos_hint: {'center':1}
            
            text: 'check_blink_num'
    

        TextInput:
            id: checknum_testinput
            size_hint: (0.1, 0.7)
            haling: 'center'
            pos_hint: {'center':1}
            
            text: '20'
            multiline: False
            input_filter: 'float'
            on_text: root.on_change_checknum()

    Slider:
        id: check_num_slider
        min: 0
        max: 500
        step: 5
        value: 20
        size_hint: (0.95, 1)
        pos_hint: {'center':1}
        on_value: root.on_slider_change(*args)






<Check_minute>:
    padding: [70, 40]
    
    Label:
        text: '1minute'
    CheckBox:
        group: 'check_blink_time'
        size_hint: (0.3, 1)
        active: True
        on_active: root.on_checkbox(self, self.active, 1)


    Label:
        text: '3minute'
    CheckBox:
        group: 'check_blink_time'
        size_hint: (0.3, 1)
        on_active: root.on_checkbox(self, self.active, 3)


    Label:
        text: '5minute'
    CheckBox:
        group: 'check_blink_time'
        size_hint: (0.3, 1)
        on_active: root.on_checkbox(self, self.active,  5)


    Label:
        text: '10minute'
    CheckBox:
        group: 'check_blink_time'
        size_hint: (0.3, 1)
        on_active: root.on_checkbox(self, self.active, 10)
    

<Notification_bar>:
    padding: [50, 30]
    orientation: 'horizontal'
    BoxLayout:
        orientation: 'vertical'
        pos_hint: {'center':1}
        CheckBox:
            size_hint: (0.3, 0.5)
            on_active: root.on_notfication_check(self, self.active, 'alarm')

        Label: 
            size_hint: (0.3, 0.5)
            text: 'alarm'
   
    BoxLayout:
        orientation: 'vertical'
        pos_hint: {'center':1}
        CheckBox:
            size_hint: (0.3, 1)
            on_active: root.on_notfication_check(self, self.active, 'vibration')

        Label: 
            size_hint: (0.3, 1)
            text: 'vibration'
   

<Button_bar>:
    padding: [90, 40]
    Button:
        size_hint: (1, 0.4)
        text: 'start'
        on_press: 
            app.root.current= "running" 
            app.root.on_startpage(*args)
        
            
           



<Running_window>:
    on_pre_enter:
        app.root.on_blinkEyeprogram(*args)
    
    BoxLayout:
        padding: [90, 90]
        orientation: 'vertical'
        Label:
            id: check_eye_num
            padding: [30, 30]
            size_hint: (1, 0.5)
            pos_hint: {'center':1}
            text: 'Running'

 

        Button:
            size_hint: (0.6, 0.1)
            pos_hint:  {'center_x': .5, 'center_y': .5}
            text: 'stop running'
            on_press:
                app.root.close_blinkEyeprogram(*args)
            on_release: 
                
                app.root.current= 'setting'
                



